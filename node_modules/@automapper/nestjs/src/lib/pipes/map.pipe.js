"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MapPipe = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@nestjs/common");
const di_1 = require("../di");
const utils_1 = require("../utils");
exports.MapPipe = utils_1.memoize(createMapPipe);
function createMapPipe(to, from, options) {
    const { isArray, mapperName, transformedMapOptions } = utils_1.getTransformOptions(options);
    let MixinMapPipe = class MixinMapPipe {
        constructor(mapper) {
            this.mapper = mapper;
        }
        transform(value, { type }) {
            var _a;
            if (utils_1.shouldSkipTransform(this.mapper, to, from) ||
                (type !== 'body' && type !== 'query')) {
                return value;
            }
            try {
                if (isArray) {
                    return utils_1.transformArray(value, this.mapper, to, from, transformedMapOptions);
                }
                return (_a = this.mapper) === null || _a === void 0 ? void 0 : _a.map(value, to, from, transformedMapOptions);
            }
            catch (e) {
                return value;
            }
        }
    };
    MixinMapPipe = tslib_1.__decorate([
        tslib_1.__param(0, common_1.Optional()),
        tslib_1.__param(0, di_1.InjectMapper(mapperName)),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], MixinMapPipe);
    return common_1.mixin(MixinMapPipe);
}
//# sourceMappingURL=map.pipe.js.map